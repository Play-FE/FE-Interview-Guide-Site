import{_ as e,c as a,o as t,a2 as r}from"./chunks/framework.DukRYrIy.js";const f=JSON.parse('{"title":"Webpack","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/webpack.md","filePath":"front-end/webpack.md","lastUpdated":1710941707000}'),p={name:"front-end/webpack.md"},l=r('<h1 id="webpack" tabindex="-1">Webpack <a class="header-anchor" href="#webpack" aria-label="Permalink to &quot;Webpack&quot;">​</a></h1><h2 id="_115-谈谈你对-webpack-的看法" tabindex="-1">115. 谈谈你对 webpack 的看法 <a class="header-anchor" href="#_115-谈谈你对-webpack-的看法" aria-label="Permalink to &quot;115. 谈谈你对 webpack 的看法&quot;">​</a></h2><ul><li><p>使用 webpack 的一个最主要原因是为了简化页面依赖的管理，并且通过将其打包为一个文件来降低页面加载时请求的资源数。</p></li><li><p>我认为 webpack 的主要原理是，它将所有的资源都看成是一个模块，并且把页面逻辑当作一个整体，通过一个给定的入口文件，webpack 从这个文件开始，找到所有的依赖文件，将各个依赖文件模块通过 loader 和 plugins 处理后，然后打包在一起，最后输出一个浏览器可识别的 JS 文件。</p></li><li><p>Webpack 具有四个核心的概念，分别是 Entry（入口）、Output（输出）、loader 和 Plugins（插件）。</p></li><li><p>Entry 是 webpack 的入口起点，它指示 webpack 应该从哪个模块开始着手，来作为其构建内部依赖图的开始。</p></li><li><p>Output 属性告诉 webpack 在哪里输出它所创建的打包文件，也可指定打包文件的名称，默认位置为 ./dist。</p></li><li><p>loader 可以理解为 webpack 的编译器，它使得 webpack 可以处理一些非 JavaScript 文件。在对 loader 进行配置的时候，test 属性，标志有哪些后缀的文件应该被处理，是一个正则表达式。use 属性，指定 test 类型的文件应该使用哪个 loader 进行预处理。常用的 loader 有 css-loader、style-loader 等。</p></li><li><p>插件可以用于执行范围更广的任务，包括打包、优化、压缩、搭建服务器等等，要使用一个插件，一般是先使用 npm 包管理器进行安装，然后在配置文件中引入，最后将其实例化后传递给 plugins 数组属性。</p></li><li><p>使用 webpack 的确能够提供我们对于项目的管理，但是它的缺点就是调试和配置起来太麻烦了。但现在 webpack4.0 的免配置一定程度上解决了这个问题。但是我感觉就是对我来说，就是一个黑盒，很多时候出现了问题，没有办法很好的定位。</p></li></ul><p>参考<br><a href="https://juejin.im/post/5b38d27451882574d87aa5d5#heading-0" target="_blank" rel="noreferrer">《不聊 webpack 配置，来说说它的原理》</a><br><a href="https://juejin.im/entry/5b5724d05188251aa01647fd" target="_blank" rel="noreferrer">《前端工程化——构建工具选型：grunt、gulp、webpack》</a><br><a href="https://juejin.im/post/5afa9cd0f265da0b981b9af9#heading-0" target="_blank" rel="noreferrer">《浅入浅出 webpack》</a><br><a href="https://juejin.im/entry/5ae5c8c9f265da0b9f400d8e" target="_blank" rel="noreferrer">《前端构建工具发展及其比较》</a></p>',4),c=[l];function n(i,o,b,d,s,k){return t(),a("div",null,c)}const h=e(p,[["render",n]]);export{f as __pageData,h as default};
